<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[数据科学导论学习笔记（1）]]></title>
    <url>%2F%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6%E5%AF%BC%E8%AE%BA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%881%EF%BC%89%2F</url>
    <content type="text"><![CDATA[数据科学导论作为数据科学与大数据技术专业的导论课程具有相当重要的意义。每周4课时（提前结课），授课教师石川老师。 希望新学期的自己能够积极完成每一门课程的课后复习和拓展，认真写博客整理知识点。 Chap.1 数据科学概论课程性质:一门导论性质的课程；包含理论知识和案例分析先修课程:高等数学，线性代数，概率论，数据结构，算法导论，计算机组成原理等后继课程:数据挖掘，数据库，机器学习，深度学习，大数据分析等 1.1 数据和大数据1.1.1 数据数据的定义:从数据科学的角度，将数据定义为，在一定背景下 有意义的 对于现实世界中的事物定性或定量的记录。数据的类型: 依据结构分类 :结构化数据：如数字、字符、日期等等属于结构化数据类型；非结构化数据：文字、图片、视频、音频等； 依据形式分类 :文本、数字、声音、图片等 依据来源分类:观测数据和实验数据 数据的DIKW模型:DIKW模型通常也被称为知识金字塔，是一个金字塔状的层状模型。Data, Infomation, Knowledge, Wisdom 1.1.2 大数据大数据的定义:1998年的 USENIX 大会上，美国硅图公司的首席科学家 John R.Mashey 首次提出了“大数据”这一概念，发表了名为《大数据与下一次基础设施压力的浪潮》的报告。首先，大数据依旧是数据，或数据相关的过程；其次，大数据的规模并非一定要达到某一确切的数值，关键在于，是否超过了实际情况下的数据存储能力和数据计算能力。 大数据相关定理与模型:（1）5V模型多样性（ Variety ），大量性（ Volume ），高速性（Velocity），价值性（ Value ），真实性（Veracity） （2）5R模型从数据管理的角度认识从大数据中获取有用信息的过程。该模型包括大数据的相关特性（Relevant），实时特性（Realtime），真实特性（Realistic），可靠特性（Reliable），以及投资回报特性（Return on investment, ROI）值得注意的是5R模型中的投资回报（ROI）。许多的大数据项目最初关注的重点只是数据本身的利用，而没有认识到对数据的利用怎么与整个商业计划相适应，忽略了数据之下的知识的价值。 （3）4P模型在医疗大数据的环境中产生了医学4P模型，包含预测性（Predictive），预防性（Preventive），个体化（Personalized），参与性（Participatory）。该医疗模型基于大数据，对疾病做出预测，并基于个人数据对病人做出个性化的服务，同时，诊疗过程中的数据将再次被记录到数据库中，从而为病人提供基于大数据的健康建议。 （4）HACE定理用于阐述大数据的定理HACE定理将大数据描述为，始于异构（Heterogeneous）,自治（Autonomous）的多源海量数据，旨在寻求探索复杂的（Complex）和演化的（Evolving）数据关联的方法和途径。基于HACE定理，文章还提出了大数据处理的三层框架。 框架的第一层是大数据的计算平台。 框架的第二层是大数据的语义和应用知识，包含数据共享与隐私、领域和应用知识的问题。 框架的第三层是大数据分析算法。 1.2 数据科学理论基础1.2.1 数据科学发展历程仅记录几个时间节点 1974年，图灵奖获得者 Peter Naur 首次提到了“数据科学”的概念。 2002年，CODATA创立了学术期刊&lt; Data Science Journal &gt;，这是首个关于数据科学的学术期刊。 2009年，谷歌首席经济学家Hal Ronald Varian发表意见称，未来十年最性感的工作是统计学家。 2010年，作家Kenneth Cukier 在《经济学人》中发表特别报告提出，“数据科学家作为一种新的职业出现，他们具备了软件程序员，统计学家和讲故事者的技能，用来提取大量数据背后隐藏的规律” 2010年，Drew Conway在文章中指出，“能够胜任工作的数据科学家需要学习很多方面东西”，并将其以韦恩图的形式总结为黑客技能、数学和统计学知识、以及专业领域知识。 1.2.2 数据科学的主要内容研究内容和研究对象:现实世界中来源不同类型不同的数据。 理论体系: Hacking skill：计算机科学、人工智能等方面的方法和技术。Math&amp;Statistics Knowledge：数学和统计学方法理论。Substantive Expertise：实质性领域知识。 数据科学与第四范式:2007年图灵奖得主 Jim Gray 在演讲中提出了“指数级增长的科学依据”背景下的数据密集型科学研究的第四范式。 几千年前，科学的星星之火刚刚点燃时的实验科学范式； 几百年前以牛顿的经典力学，麦克斯韦理论解释的电磁学，所代表的理论科学范式 几十年前的计算机科学范式 到信息爆炸的今天，我们需要从计算机科学中把数据密集型科学区分出来，作为一个新的、科学探索的第四种范式，这就是第四范式的由来。数据密集型范式 国际数据委员会（CODATA）原称国际科技数据委员会，是原国际科学联合会下属一级学术机构，其宗旨是推动科技数据应用，发展数据科学，促进科学研究，造福人类社会，成立于1966年，秘书处设在法国巴黎。国际科学联合会和国际社会科学联合会于2018年7月正式合并成为International Science Council (ISC)，国际科技数据委员会也相应更名为国际数据委员会，从ICSU下一个专门关注科学数据的跨学科的国际组织演变成ISC下推动大数据与数据科学发展的主要机构。 数据密集型科学由三个基本活动组成：数据采集、数据管理和数据分析。 数据科学与第四范式的联系在于，这两者是大数据研究的两大理论基础，前者是更广泛意义上的数据科学，后者是针对科学研究范式而言的。 1.3 数据科学应用实践1.3.1 数据科学家数据科学家的定义: 具有计算机科学技术，数学和统计学知识基础和实质性专业理论知识的人。 能够发现现实世界的问题，收集问题相关的数据，抽取数据中的信息，并解释数据背后的意义的人。 数据科学家的技能: 数据科学家的工作需要使用：Python, R, SQL, Hadoop, Spark, Java, SAS, C++, Tensorflow等语言、库或是工具。 1.3.2 数据科学工作流程 分析数据包括两步，第一步是探索性分析，第二步是通过机器学习算法和统计学模型对数据进行分析。探索性分析是指对已有的数据在尽量少的先验假定下进行探索，通过制图，制表，方程拟合等手段探索数据结构和规律的一种数据分析方法，适用于面对大量数据不知如何下手从何处分析的情况。 1.3.3 数据科学实践案例 医疗健康大数据 沃尔玛与社交大数据 大数据与智慧城市]]></content>
      <categories>
        <category>数据科学导论</category>
      </categories>
      <tags>
        <tag>大数据</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mdtst]]></title>
    <url>%2Fmdtst%2F</url>
    <content type="text"><![CDATA[︿(￣︶￣)︿请您输入密码以继续查看。d5118b1cdeae4ff8192d74680351225ce3a9a5138fb38398d6d2a80233f7bf0ddac140c309bdae7a7036d9b2fb26e4769026333f97b2a62ccbd698d494f9c59540b3ede611c50afbc18ddc0d5cdce900a99750de3fa6dda8b6b172b2fd3d83699674974ba7c76e285f6c144230120395aea441f9e8c2402cd2699e07d266e926750234ec533dcd63f98f085b5a7d73f9198c1577046131c4c562404fc5dba3a2a53f0935e80f9e9bef78867a709430d838f03dbb492ea205db816848ae8d3cc83ec9f63cb6ccee55528e51eb143e96d6da28047d38c849430b9906768bef14295edd24da38c892b132d2f0f7ade9bd06ad17b46242664ef4d014faac97925285b1b38ba7140c07754fe843143220764e7bc922f61f697abf5c0628cd19fe322157666e3c3798951a25e48a97b6f533c0621f8f88844e33c95b05ddbbe1a3edaff2dd5f3dc5c3277092494a37807fcd1f5b1bc9e424c9583096ebf8e4f30dd97d4ff8c75bc2cf38653c5866e6ae2bb4eebc4f635b1925792d11c08ac9f5a992a3703a755670a42b077e405d3724867716a359b4a5a1b249c9ab8720f20e22513caa534b8b085cc84b85832152fbe1928e23b97ed27614bba24b299f6d1da0d6660879502193aa41b76863e0436a9308a05aa3908c35fabe888555a77118a99c47631a3db50622a2db2b5191845c49c0a38ffe2558c53314fcde1e7deed17ebf184c27bf774b7fb3ff6544089504b76531e0eddb8a2187e6471c51e27b6d1c8c8641f94368feddd4574f76ca41773ad16c5ef789dc5f04428f1d82666198f6f086cdeb281e995d9f957db1b858862ce8b6e89a3150247d162cf524484b2b9606394256983afe67b969fc50bf208e6c4db2c37171820640c0ee89d53d70dff08802c13456a424234a2cd18a9765885583cf829a8a656611703311c9580f69c29c6a6cc1c807b060652b0a3a8ec80b749f750f97f82deea3b52051d8bafb642d1b71c1383950a81644497568b7ec976c15bea13d8f3f6f237dd8bb92e4b60d2311d67ffd088aadc402d034be56f8997e88960521f427ff57f806f06bcd78dfc8640fdc5f6646e2bd8ff30b1dacdea0dd38143092abe42adc88a9160f24457fdc44cffa84bb35025ab030bf9f5c491af895c59fefb400441544fd92dc53949ec2615159538b2c2bcc85f6f4ab0c363b9fd63f6173a62687fcf784479f0f10b038fe6a547a95db7f0774ac2b7bb8c9c2f72bcdadcf7db91a65c3eda41c08012e4935eb6d63e0300dac15c0f0efb7a92c1ae178635092c182792f87a178fb128980044a049290a0f700293b3a711be5fb4a31f2026ddebf51130929307cf358c5b67c1f1c107b2bd94fa218c03b93400e284ca307f9bcaf699470c1693b937d7fc6944d08be062cc93a7f64a37e1403f0efc887577086a494aa3684236474228bb05a0522a1bbbbf1feb46f38163d7ee52f05f180b28fef3db5df58f19e295f10646edb2dbd8136b07e1ef0c3e0418af794ae2558bbe9b2938a12a3bced1d251a87b8cab4f2dd2fe54af03907fb61d3ec2efcaca6ebcbece4c28768abb627baf61feb02d3aa0f0039f585ad4a1b29da6828ef57d5b8a302a538947ecdd1dd856466eab9c4236c48216ef6cf5ceefac609cc2ab408c023a49ab44058482e8b4ad130751f05fc098fa9f6ae66c4be9aca3720e588e997752d946210495db9a0a39edde39425bcc2b1d7d68995ad7299f9f12972a01cd808c7d5995e4097d4f48cec98ed7cd2cd8801bc571c9bc04d7f2096abf6d34d0c9183ccf36997b0340d243da1df8fc9ea8200fe38b7a69e353591895444ab4fc4f6298c70e5a5ef5f5978dac9c74f2d2542813aee05f230b070dc5c829f849c57e16140e39a9b6bc1b16be5239a9d7e6525f50fa99f45aee413641d4273fcd1dd9a059f1f13d87ccb97010f487260cd89060c1b50ec55208a9dcc1c85d194178d288f775c5c737a6f789f8e53913a82e0cd6380a2292fd944213d095f32b3040b9378e1f0b3d0704672f30cc76aa0647c640e44de48e653825cc9afa2a5ee0de7f3587cf146b0ccbb5793251a7eb0f68a059f73b59c7533363237efdac4df5be1f4d4497643f1fe8f058788a929b095261202674f4f2156392ffdab4da2fb3a8f704d2c487c8e3921707725fad033e15763e00aadd34e075e00ec66a3b7e75c2e50eb84e94acd74919780f9f3e04d9b953856f5b7199ce92f5d09935181d98216e95d82f58609f8fd74218522e21adc8f0f59361817f0bdba24bcd0b13001a94f66b0f25be858137bd0196c18bd3b3f54516cc89278207af9ff48c5a95199990ea1d9682b55625162487cc7d5019c42537133320ba04a61de0b25764f4d1fe10c19194d7cace3bbddae26ada584ce0017c66040218d4fd9701c99ededfeaa1bfbf383af76f163cfbd93511aad0878c2657a10d88d7a245345d12bd91ce352e5fe57e93bd52278dcf75d325b830ba8b456b28fba8b77dc2b8a5e4df9a85aa316617bb6db840f08b1d1b1c7a4a4671e347b79e0dd8458eeb04cfabd6d5e215fc3e0cd84ac74c31811ea56f2b3a7d1ba6cce50e5122541a9f24fa18e512509b339ddb587a63e431466fbfdc52b4bfefd5edd0b1b52ce5097c5286913b94e5875b0b89ac0e13d05d002c4a28c220f9e3b1d3ae5604048cd7bd44ac843e660f66900fa7af2dde12af7e18d7ced096b0c2a4491ee3dcf60c165d8f9796b1cb4fc2bc6b1ca377931369dcf53392b513bb077e76667e84ac5e9c69d5ea311563d0fa526919aa96699f8e51716907e4d9d1dee53697980def2d3261b5405a5e7706b0ff7481f366bf25c40f67a1f0b693a4168b4ff98a77df1d46a7a796a4f272f0ec7d6e45bd3c9cf397d1e4d4acfc05f208194ca2cdb2bf920f8095ee5c5cda60d589eb9370df3b5d9eab267c84ba7003a551359d28bf3183e909b1a4faad5785d06d1173465cab43c4c5de88a34f9d4b98cdcd79e73c4987f44be224e67972f03842fc5c84ea555f7e66eaeaa715fe384a98c5998f49bb33866047e35144805adaed81d93c9d9ac536e54bef69cb8dbbbdc37843802a7ec834e7d9e5feb00263c573becab1b8e802ab00464e5d456ba0c9cb73ab0d9e52a082702b765e2e1abe8c5fff10b99607b1e28a76ccefc52713134510e119014d3903e775aa22c4714ba8969a2603b50f99a6817ee250b5c1ce6039700808c2a9a74cb453860b7260c31f947e94623fe6c10adda7143d9dbfd5204aa392c8e63b2da1627f80ca9c5897ad00e2384fcac8546c151df7fa90e496329a31021945627e9020b98565d84b5873953740cb21642a15db6cc9d67775765a8bb160a94e932b850e5a5da9916b0a7a4f246ddd155741163c48c448a5b49af41f12da5b2b72e5eaa9df107dc02dd48d4714093eee5a60f8f3db472ad698cfc05c5b7d1a400ea6640d0b9467c970450ff3c00b594d355e04d93d4b47eaefc3af64523c76528ea6ee5ad41dbdb9741d433739821dbd20d1a9ae372da8f8cfcb7ffd1373ac1bd9297bc35e603e1661d8b97fe53c143642d62160975e672cf379ab8afcb8f663f45137e7d146e01201e8d5e1014b9065c743a6e5b9e08b865c1740eb6a9f08c6dbf026ec38196e66f4151004686301a167909cabedcbfc306de91406aa1e687e800d1e171052a071e553102d2f22b88b87b85c05ef748322968cc5feff41f554242b3c2ad578a9ad093ff14c0b570fa31932ebf4c5c5ebb790a9b282e370d67b41215a27da2c13f0db50b4297bb0f6b53bde615d98d195d6b23e3fd0d71230639402e5224e45a5cf648adeadfd23e269065788e7bce5ae8cd035e157a2531aa89422e021999284ea915db14741c3f4afb712f9537b11a70b71c55848ce90488339f4bb7826633fdc209eaaedf30f06927c6deac08f1175b10b517745f2b8bca9775aa8839b6b61e3f43e51f54888a3bc2e45682d49a1f0c8a3ddb6dfa8279cfd412a86b5937899c71178d9289aca18ba7890d92046a70f75e5376d040c4cea7774e15c54ca7f77e8bb064d418a65f1f3415bb5fe50fef39c37b34ed81080946234add4553b08d093d06341c40228eea0832ae3b0f87081d3e7b2fd5f7bbe314aac60e9181db4197ae07df019ce321632e8fbc5494dc78bcabe87a198fd77c95bfc4590407e676adc38ce670eede690e2c3dafdbccb65a6a5aa647ff7403b87eb0b281188978ede92b7a6dde7a9f32a856f85f57877d6e52c61eb99f]]></content>
  </entry>
  <entry>
    <title><![CDATA[《第一行代码》Chap1.开始启程]]></title>
    <url>%2F%E3%80%8A%E7%AC%AC%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81%E3%80%8BChap1-%E5%BC%80%E5%A7%8B%E5%90%AF%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[Chap1 开始启程——你的第一行Android代码1.1了解全貌——Android王国简介1.1.3 Android开发应用特色01 四大组件Android系统四大组件分别是活动（Activity）、服务（Service）、广播接收器（Broadcast Reciever）和内容提供器（Content Provider）。 活动应用程序的门面，所有能看到的东西都放在活动中。 服务一直在后台默默运行。 广播接收器允许你的应用接受来自各处的广播消息，比如电话、短信等。 内容提供器则为应用程序之间共享数据提供了可能，比如可以通过内容提供器读取系统电话簿中的联系人。 02 丰富的系统控件03 SQLite数据库04 强大的多媒体05 地理位置定位 1.3.4 分析你的第一个Android程序01 .gradle 和.idea AndroidStudio自动生成的一些文件 02 app 项目中代码、资源的存放03 build 存放编译时自动生成的文件04 .gitignore用来将制定的目录或文件排除在版本控制之外 05 build.gradle不需要修改、项目全局的gradle构建脚本 …… 除了app目录之外，大多数的文件和目录都是自动生成的，我们并不需要进行修改。 app目录下的结构 build包含编译时生成的文件 libs把第三方jar包放在libs目录下，放在这里的jar包都会被自动添加到构筑路径中去。 androidTest编写Android Test测试用例，可以对项目进行一些自动化测试 java存放所有java代码 res存放项目中使用到的所有图片、布局、字符串等资源。 图片放在drawable目录下 布局放在layout目录下 字符串放在values目录下 AndroidManifest.xml整个Android项目的配置文件，在程序中定义的四大组件都需要在这个文件里注册，可以给应用程序添加权限声明。 test编写Unit Test测试用例的，是对项目进行自动化测试的另一种方式 .gitignore将app模板内的指定的目录或文件排除在版本控制之外 AndroidManifest.xml文件 &lt;activity android:name=".HelloWorldActivity"&gt; &lt;intent-filter&gt; &lt;action android:name="android.intent.action.MAIN" /&gt; //表示HelloWorldActivity是这个项目的主活动 &lt;category android:name="android.intent.category.LAUNCHER" /&gt; //点击图标，首先启动的就是这个活动 &lt;/intent-filter&gt;&lt;/activity&gt; HelloWorldActivity.java package com.example.helloworld;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.util.Log;public class HelloWorldActivity extends AppCompatActivity &#123;//继承 @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.hello_world_layout); Log.d("HelloWorldAcitivity","onCreate execute"); &#125;&#125; Android程序的设计讲究逻辑和视图分离，因此是不推荐在活动中直接编写界面的，更加通用的一种做法是，在布局文件中编写界面，然后在活动中引入进来。 &lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android" xmlns:app="http://schemas.android.com/apk/res-auto" xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent" android:layout_height="match_parent" tools:context=".HelloWorldActivity"&gt; &lt;TextView android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="Hello World!" app:layout_constraintBottom_toBottomOf="parent" app:layout_constraintLeft_toLeftOf="parent" app:layout_constraintRight_toRightOf="parent" app:layout_constraintTop_toTopOf="parent" /&gt;&lt;/android.support.constraint.ConstraintLayout&gt; 1.3.5详解项目中的资源 res目录下的结构drawable开头的文件就是用来存放图片的。mipmap开头的文件夹是用来存放应用图标的。values用来存放字符串、样式、颜色等配置。layout存放布局。 res/values/strings.xml &lt;resources&gt; &lt;string name="app_name"&gt;HelloWorld&lt;/string&gt;&lt;/resources&gt; 有两种方式来引用这个字符串 在代码中： R.string.app_name 在XML中：@string/app_name 1.3.6详解build.gradle文件最外层目录下的build.gradle文件部分代码 buildscript &#123; repositories &#123; google() jcenter() //jcenter代码托管仓库，可以在项目中轻松引用jcenter上的开源项目 &#125; dependencies &#123; classpath &apos;com.android.tools.build:gradle:3.1.4&apos; //声明用Gradle来构建Android项目 // NOTE: Do not place your application dependencies here; they belong // in the individual module build.gradle files &#125;&#125;app目录内的build.gradle文件apply plugin: &apos;com.android.application&apos;//应用了一个插件，一般有两种值可以选。//com.android.application 表示应用程序模块,可以直接运行//com.android.library 表示这是一个库模块，依附于别的应用程序模块来运行android &#123; compileSdkVersion 28 //指定项目的编译版本 defaultConfig &#123;//更多细节配置 applicationId &quot;com.example.helloworld&quot;//指定项目包名 minSdkVersion 15//项目最低兼容的系统版本 targetSdkVersion 28 versionCode 1 versionName &quot;1.0&quot; testInstrumentationRunner &quot;android.support.test.runner.AndroidJUnitRunner&quot; &#125; buildTypes &#123;//指定生成安装文件的相关配置 //buildTypes通常有两个子包 debug（测试版的配置）和release（正式版的配置） release &#123; minifyEnabled false //是否对项目的代码进行混淆 proguardFiles getDefaultProguardFile(&apos;proguard-android.txt&apos;), &apos;proguard-rules.pro&apos; &#125; &#125;&#125;dependencies &#123;//指定当前项目所有的依赖关系 //本地依赖 对本地的Jar包或目录添加依赖关系 //库依赖 对项目的库模块添加依赖关系 //远程依赖 对jcenter库上的开源项目添加依赖关系 implementation fileTree(dir: &apos;libs&apos;, include: [&apos;*.jar&apos;])//本地依赖 implementation &apos;com.android.support:appcompat-v7:28.0.0&apos;//远程依赖 implementation &apos;com.android.support.constraint:constraint-layout:1.1.3&apos; testImplementation &apos;junit:junit:4.12&apos; androidTestImplementation &apos;com.android.support.test:runner:1.0.2&apos; androidTestImplementation &apos;com.android.support.test.espresso:espresso-core:3.0.2&apos;&#125; 1.4 前行必备——掌握日志工具的使用Log.v( ) verboseLog.d( ) debugLog.i( ) infoLog.w( ) warnLog.e( ) error Log.d(“HelloWorldAcitivity”,”onCreate execute”); “tag”:当前类名，对打印信息进行过滤“msg”:要打印的具体内容]]></content>
      <tags>
        <tag>Android开发</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[新博客的第一篇文章]]></title>
    <url>%2Fnewpapername%2F</url>
    <content type="text"><![CDATA[欢迎]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new "My New Post" More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
